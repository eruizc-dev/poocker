#!/bin/bash

BASE_PATH='/var/poocker';

# Must run as sudo
if [ "$EUID" -ne 0 ]; then
  echo 'Please run as root'
  exit 1
fi

function poocker_init() { #HELP init	build an image on current directory
	if [[ -d "$1" ]]; then
		LONG_UUID=$(uuidgen);
		UUID="i-${LONG_UUID:0:4}";
		IMAGE_PATH="$BASE_PATH/$UUID"
		mkdir -p $BASE_PATH
		btrfs subvolume create "$IMAGE_PATH" > /dev/null
		cp -rf --reflink=auto "$1"/* "$IMAGE_PATH" > /dev/null
		echo "Created image $UUID"
	else
		echo "No directory named '$1' exists"
	fi
}

function poocker_rm() { #HELP rm		remove an image
	if btrfs subvolume list "$BASE_PATH" | grep -qw "$1"; then
		btrfs subvolume delete "$BASE_PATH/$1" > /dev/null
		echo "Removed image $1"
	else
		echo "No image named '$1' exists"
		exit 1
	fi
}

function poocker_ls() { #HELP ls		list all images
	btrfs subvolume list /var/poocker | awk '{ print $9 }'
}

function poocker_help() { #HELP help	print this menu
	echo 'Usage: poocker [command]'
	echo 'Available commands:'
	sed -n "s/^.*#HELP\\s/\t/p;" < "$0"
}

[[ -z "${1-}" ]] && poocker_help "$0" && exit 1
case $1 in
	help|init|rm|ls) poocker_"$1" "${@:2}" ;;
	*) echo "Unrecognized option $1"; poocker_help "$0" && exit 1;;
esac
